{
  "name": "series-stream",
  "version": "1.0.1",
  "description": "Pipe multiple streams into a single stream, ensuring each added stream finishes piping it's data before the next begins.",
  "main": "index.js",
  "scripts": {
    "test": "istanbul cover tape test/test.js"
  },
  "keywords": [
    "funnel",
    "stream",
    "combine",
    "concat",
    "each",
    "series",
    "linear"
  ],
  "author": {
    "name": "Alan Shaw"
  },
  "license": "ISC",
  "devDependencies": {
    "concat-stream": "^1.4.7",
    "istanbul": "^0.3.7",
    "tape": "^3.5.0"
  },
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/alanshaw/series-stream.git"
  },
  "bugs": {
    "url": "https://github.com/alanshaw/series-stream/issues"
  },
  "homepage": "https://github.com/alanshaw/series-stream",
  "readme": "# series-stream [![Build Status](https://travis-ci.org/alanshaw/series-stream.svg?branch=master)](https://travis-ci.org/alanshaw/series-stream)\n\nPipe multiple streams into a single stream, ensuring each added stream finishes piping it's data before the next begins.\n\n## Example\n\n```js\nvar fs = require('fs')\nvar createSeriesStream = require('series-stream')\n\nvar ss = createSeriesStream()\n\nvar file1 = '/path/to/file1'\nvar file2 = '/path/to/file2'\nvar file3 = '/path/to/file3'\nvar outfile = '/path/to/outfile'\n\n// Add streams in the order you want them to pipe out\nss.add(fs.createReadStream(file3))\nss.add(fs.createReadStream(file1))\nss.add(fs.createReadStream(file2))\n\nss.pipe(fs.createWriteStream(outfile))\n// Outfile now contains the contents of file 3, 1 and 2 in that order\n```\n",
  "readmeFilename": "README.md",
  "_id": "series-stream@1.0.1",
  "dist": {
    "shasum": "5776fe344390cb94b4c37253d353fb1dcf936a0b"
  },
  "_from": "series-stream@^1.0.1",
  "_resolved": "https://registry.npmjs.org/series-stream/-/series-stream-1.0.1.tgz"
}
